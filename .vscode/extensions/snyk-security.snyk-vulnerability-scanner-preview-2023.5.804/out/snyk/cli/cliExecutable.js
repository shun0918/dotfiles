"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CliExecutable = void 0;
const fs = __importStar(require("fs/promises"));
const path_1 = __importDefault(require("path"));
const platform_1 = require("../common/platform");
// TODO: This file is to be removed in VS Code + Language Server feature cleanup. We need to ensure all users have migrated to use CLI path that's set by the language server.
class CliExecutable {
    constructor(version, checksum) {
        this.version = version;
        this.checksum = checksum;
    }
    static getFilename(platform) {
        return this.filenameSuffixes[platform];
    }
    static getPath(extensionDir, customPath) {
        if (customPath) {
            return customPath;
        }
        const platform = platform_1.Platform.getCurrent();
        const fileName = CliExecutable.getFilename(platform);
        return path_1.default.join(extensionDir, fileName);
    }
    static exists(extensionDir, customPath) {
        return fs
            .access(CliExecutable.getPath(extensionDir, customPath))
            .then(() => true)
            .catch(() => false);
    }
}
exports.CliExecutable = CliExecutable;
// If values updated, `.vscodeignore` to be changed.
CliExecutable.filenameSuffixes = {
    linux: 'snyk-linux',
    win32: 'snyk-win.exe',
    darwin: 'snyk-macos',
};
//# sourceMappingURL=cliExecutable.js.map