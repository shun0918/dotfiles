"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.vsCodeEnv = exports.VSCodeEnv = void 0;
const vscode = __importStar(require("vscode"));
class VSCodeEnv {
    getUiKind() {
        return vscode.UIKind[vscode.env.uiKind];
    }
    getRemoteName() {
        return vscode.env.remoteName;
    }
    getAppName() {
        return vscode.env.appName;
    }
    getAppHost() {
        // vscode.env.appHost was introduced only in engine of version >1.60.0, cast to keep old VS Code versions support for now (// TODO remove cast, once upgraded).
        // https://code.visualstudio.com/api/references/vscode-api#env.appHost
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any
        return vscode.env.appHost;
    }
}
exports.VSCodeEnv = VSCodeEnv;
exports.vsCodeEnv = new VSCodeEnv();
//# sourceMappingURL=env.js.map