"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.extensionContext = exports.ExtensionContext = void 0;
/**
 * A wrapper class for the vscode.ExtensionContext to provide centralised access to a collection of utilities private to the extension.
 */
class ExtensionContext {
    setContext(context) {
        this.context = context;
    }
    getExtensionUri() {
        return this.acquireContext().extensionUri;
    }
    addDisposables(...disposables) {
        this.acquireContext().subscriptions.push(...disposables);
    }
    get extensionPath() {
        return this.acquireContext().extensionPath;
    }
    get subscriptions() {
        return this.acquireContext().subscriptions;
    }
    getGlobalStateValue(key) {
        return this.acquireContext().globalState.get(key);
    }
    updateGlobalStateValue(key, value) {
        return this.acquireContext().globalState.update(key, value);
    }
    secrets() {
        return this.acquireContext().secrets;
    }
    acquireContext() {
        if (!this.context)
            throw new Error('VS Code extension context not set.');
        return this.context;
    }
}
exports.ExtensionContext = ExtensionContext;
exports.extensionContext = new ExtensionContext();
//# sourceMappingURL=extensionContext.js.map