"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IacService = void 0;
const types_1 = require("../common/languageServer/types");
const productService_1 = require("../common/services/productService");
const iacCodeActionsProvider_1 = require("./codeActions/iacCodeActionsProvider");
class IacService extends productService_1.ProductService {
    constructor(extensionContext, config, suggestionProvider, codeActionAdapter, codeActionKindAdapter, viewManagerService, workspace, workspaceTrust, languageServer, languages, logger, analytics) {
        super(extensionContext, config, suggestionProvider, viewManagerService, workspace, workspaceTrust, languageServer, languages, logger);
        this.codeActionAdapter = codeActionAdapter;
        this.codeActionKindAdapter = codeActionKindAdapter;
        this.analytics = analytics;
        this.registerCodeActionsProvider(new iacCodeActionsProvider_1.IacCodeActionsProvider(this.result, codeActionAdapter, codeActionKindAdapter, languages, analytics));
    }
    subscribeToLsScanMessages() {
        return this.languageServer.scan$.subscribe((scan) => {
            if (scan.product !== types_1.ScanProduct.InfrastructureAsCode) {
                return;
            }
            super.handleLsScanMessage(scan);
        });
    }
    refreshTreeView() {
        this.viewManagerService.refreshIacView();
    }
}
exports.IacService = IacService;
//# sourceMappingURL=iacService.js.map