"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IacCodeActionsProvider = void 0;
const types_1 = require("../../common/commands/types");
const commands_1 = require("../../common/constants/commands");
const codeActionsProvider_1 = require("../../common/editor/codeActionsProvider");
const codeActionMessages_1 = require("../../common/messages/codeActionMessages");
const issue_1 = require("../issue");
class IacCodeActionsProvider extends codeActionsProvider_1.CodeActionsProvider {
    constructor(issues, codeActionAdapter, codeActionKindAdapter, languages, analytics) {
        super(issues, codeActionKindAdapter, analytics);
        this.codeActionAdapter = codeActionAdapter;
        this.languages = languages;
    }
    getActions(folderPath, _, issue, range) {
        const openIssueAction = this.createOpenIssueAction(folderPath, issue, range);
        // returns list of actions, all new actions should be added to this list
        return [openIssueAction];
    }
    getAnalyticsActionTypes() {
        return ['Show Suggestion'];
    }
    getIssueRange(issue) {
        return issue_1.IacIssue.getRange(issue, this.languages);
    }
    createOpenIssueAction(folderPath, issue, issueRange) {
        const openIssueAction = this.codeActionAdapter.create(codeActionMessages_1.codeActionMessages.showSuggestion, this.providedCodeActionKinds[0]);
        openIssueAction.command = {
            command: commands_1.SNYK_OPEN_ISSUE_COMMAND,
            title: commands_1.SNYK_OPEN_ISSUE_COMMAND,
            arguments: [
                {
                    issueType: types_1.OpenCommandIssueType.IacIssue,
                    issue: {
                        id: issue.id,
                        folderPath,
                        filePath: issue.filePath,
                        range: issueRange,
                    },
                },
            ],
        };
        return openIssueAction;
    }
}
exports.IacCodeActionsProvider = IacCodeActionsProvider;
//# sourceMappingURL=iacCodeActionsProvider.js.map