(function (root, factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', './kotlin-kotlin-stdlib-js-ir.js', './experiment-evaluation-evaluation-core.js'], factory);
  else if (typeof exports === 'object')
    factory(module.exports, require('./kotlin-kotlin-stdlib-js-ir.js'), require('./experiment-evaluation-evaluation-core.js'));
  else {
    if (typeof this['kotlin-kotlin-stdlib-js-ir'] === 'undefined') {
      throw new Error("Error loading module 'experiment-evaluation-evaluation-js'. Its dependency 'kotlin-kotlin-stdlib-js-ir' was not found. Please, check whether 'kotlin-kotlin-stdlib-js-ir' is loaded prior to 'experiment-evaluation-evaluation-js'.");
    }
    if (typeof this['experiment-evaluation-evaluation-core'] === 'undefined') {
      throw new Error("Error loading module 'experiment-evaluation-evaluation-js'. Its dependency 'experiment-evaluation-evaluation-core' was not found. Please, check whether 'experiment-evaluation-evaluation-core' is loaded prior to 'experiment-evaluation-evaluation-js'.");
    }
    root['experiment-evaluation-evaluation-js'] = factory(typeof this['experiment-evaluation-evaluation-js'] === 'undefined' ? {} : this['experiment-evaluation-evaluation-js'], this['kotlin-kotlin-stdlib-js-ir'], this['experiment-evaluation-evaluation-core']);
  }
}(this, function (_, kotlin_kotlin, kotlin_com_amplitude_evaluation_core) {
  'use strict';
  //region block: imports
  var ensureNotNull = kotlin_kotlin.$_$.n1;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.f;
  var Unit_getInstance = kotlin_kotlin.$_$.i;
  var EvaluationEngineImpl = kotlin_com_amplitude_evaluation_core.$_$.c;
  var THROW_CCE = kotlin_kotlin.$_$.m1;
  var Allocation = kotlin_com_amplitude_evaluation_core.$_$.a;
  var EvaluationMode_LOCAL_getInstance = kotlin_com_amplitude_evaluation_core.$_$.h;
  var EvaluationMode_REMOTE_getInstance = kotlin_com_amplitude_evaluation_core.$_$.i;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.g;
  var get_DEFAULT_BUCKETING_KEY = kotlin_com_amplitude_evaluation_core.$_$.b;
  var FlagConfig = kotlin_com_amplitude_evaluation_core.$_$.d;
  var SegmentTargetingConfig = kotlin_com_amplitude_evaluation_core.$_$.e;
  var Operator_IS_getInstance = kotlin_com_amplitude_evaluation_core.$_$.s;
  var Operator_IS_NOT_getInstance = kotlin_com_amplitude_evaluation_core.$_$.r;
  var Operator_CONTAINS_getInstance = kotlin_com_amplitude_evaluation_core.$_$.j;
  var Operator_DOES_NOT_CONTAIN_getInstance = kotlin_com_amplitude_evaluation_core.$_$.l;
  var Operator_LESS_THAN_getInstance = kotlin_com_amplitude_evaluation_core.$_$.u;
  var Operator_LESS_THAN_EQUALS_getInstance = kotlin_com_amplitude_evaluation_core.$_$.t;
  var Operator_GREATER_THAN_getInstance = kotlin_com_amplitude_evaluation_core.$_$.p;
  var Operator_GREATER_THAN_EQUALS_getInstance = kotlin_com_amplitude_evaluation_core.$_$.o;
  var Operator_SET_IS_getInstance = kotlin_com_amplitude_evaluation_core.$_$.y;
  var Operator_SET_IS_NOT_getInstance = kotlin_com_amplitude_evaluation_core.$_$.x;
  var Operator_CSS_MATCH_getInstance = kotlin_com_amplitude_evaluation_core.$_$.k;
  var Operator_GLOB_MATCH_getInstance = kotlin_com_amplitude_evaluation_core.$_$.n;
  var Operator_SET_CONTAINS_getInstance = kotlin_com_amplitude_evaluation_core.$_$.v;
  var Operator_SET_DOES_NOT_CONTAIN_getInstance = kotlin_com_amplitude_evaluation_core.$_$.w;
  var Operator_GLOB_DOES_NOT_MATCH_getInstance = kotlin_com_amplitude_evaluation_core.$_$.m;
  var Operator_VERSION_LESS_THAN_getInstance = kotlin_com_amplitude_evaluation_core.$_$.c1;
  var Operator_VERSION_LESS_THAN_EQUALS_getInstance = kotlin_com_amplitude_evaluation_core.$_$.b1;
  var Operator_VERSION_GREATER_THAN_getInstance = kotlin_com_amplitude_evaluation_core.$_$.a1;
  var Operator_VERSION_GREATER_THAN_EQUALS_getInstance = kotlin_com_amplitude_evaluation_core.$_$.z;
  var Operator_HAS_PREFIX_getInstance = kotlin_com_amplitude_evaluation_core.$_$.q;
  var toSet = kotlin_kotlin.$_$.p;
  var UserPropertyFilter = kotlin_com_amplitude_evaluation_core.$_$.f;
  var Variant = kotlin_com_amplitude_evaluation_core.$_$.g;
  var Keys_getInstance = kotlin_com_amplitude_evaluation_core.$_$.e1;
  var SkylabUser_init_$Create$ = kotlin_com_amplitude_evaluation_core.$_$.d1;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.b;
  var to = kotlin_kotlin.$_$.q1;
  var toMap = kotlin_kotlin.$_$.o;
  var isArray = kotlin_kotlin.$_$.a1;
  var arrayIterator = kotlin_kotlin.$_$.r;
  var isObject = kotlin_kotlin.$_$.c1;
  //endregion
  //region block: pre-declaration
  //endregion
  function get_engine() {
    init_properties_Evaluation_kt_j17bby();
    return engine;
  }
  var engine;
  function evaluate(rules, user) {
    init_properties_Evaluation_kt_j17bby();
    var flagConfigs = ensureNotNull(dynamicListOf(rules, evaluate$lambda()));
    var skylabUser = ensureNotNull(dynamicSkylabUser(user));
    var results = get_engine().ya(flagConfigs, skylabUser);
    if (results.i()) {
      return JSON.parse('{}');
    }
    var sb = StringBuilder_init_$Create$();
    sb.z7('{');
    {
      var tmp$ret$0;
      {
        tmp$ret$0 = results.k().d();
      }
      var tmp0_iterator = tmp$ret$0;
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.e();
        {
          if (!element.u().yb_1) {
            var flagKey = element.s();
            var variantKey = element.u().wb_1.l9_1;
            var variantPayload = element.u().wb_1.m9_1;
            sb.z7('"' + flagKey + '":{"value":"' + variantKey + '","payload":' + JSON.stringify(variantPayload) + '}');
            sb.z7(',');
          }
        }
      }
    }
    if (sb.b2() > 1) {
      sb.a8(sb.b2() - 1 | 0);
    }
    sb.z7('}');
    return JSON.parse(sb.toString());
  }
  function evaluate$lambda() {
    return function (it) {
      return ensureNotNull(dynamicFlagConfig(it));
    };
  }
  var properties_initialized_Evaluation_kt_s68m2m;
  function init_properties_Evaluation_kt_j17bby() {
    if (properties_initialized_Evaluation_kt_s68m2m) {
    } else {
      properties_initialized_Evaluation_kt_s68m2m = true;
      engine = new EvaluationEngineImpl();
    }
  }
  function dynamicAllocation(js) {
    var tmp;
    if (js) {
      var tmp_0 = js.percentage;
      var tmp_1 = (!(tmp_0 == null) ? typeof tmp_0 === 'number' : false) ? tmp_0 : THROW_CCE();
      var tmp_2 = js.weights;
      tmp = new Allocation(tmp_1, dynamicMapOf$default(tmp_2, null, 2, null));
    } else {
      tmp = null;
    }
    return tmp;
  }
  function dynamicEvaluationMode(js) {
    var tmp0_subject = (!(js == null) ? typeof js === 'string' : false) ? js : THROW_CCE();
    var tmp;
    switch (tmp0_subject) {
      case 'LOCAL':
        tmp = EvaluationMode_LOCAL_getInstance();
        break;
      case 'REMOTE':
        tmp = EvaluationMode_REMOTE_getInstance();
        break;
      default:
        throw IllegalArgumentException_init_$Create$('EvaluationMode ' + js + ' must be a valid: local, remote');
    }
    return tmp;
  }
  function dynamicFlagConfig(js) {
    var tmp;
    if (js) {
      var tmp_0 = js.flagKey;
      var tmp_1 = (!(tmp_0 == null) ? typeof tmp_0 === 'string' : false) ? tmp_0 : THROW_CCE();
      var tmp_2 = js.enabled;
      var tmp0_elvis_lhs = (!(tmp_2 == null) ? typeof tmp_2 === 'boolean' : false) ? tmp_2 : null;
      var tmp_3 = tmp0_elvis_lhs == null ? false : tmp0_elvis_lhs;
      var tmp_4 = js.bucketingKey;
      var tmp1_elvis_lhs = (!(tmp_4 == null) ? typeof tmp_4 === 'string' : false) ? tmp_4 : null;
      var tmp_5 = tmp1_elvis_lhs == null ? get_DEFAULT_BUCKETING_KEY() : tmp1_elvis_lhs;
      var tmp_6 = js.bucketingSalt;
      var tmp_7 = (tmp_6 == null ? true : typeof tmp_6 === 'string') ? tmp_6 : null;
      var tmp_8 = js.defaultValue;
      var tmp_9 = (tmp_8 == null ? true : typeof tmp_8 === 'string') ? tmp_8 : null;
      var tmp_10 = js.variants;
      var tmp_11 = ensureNotNull(dynamicListOf(tmp_10, dynamicFlagConfig$lambda()));
      var tmp_12 = js.variantsExclusions;
      var tmp_13 = dynamicMapOf(tmp_12, dynamicFlagConfig$lambda_0());
      var tmp_14 = js.variantsInclusions;
      var tmp_15 = dynamicMapOf(tmp_14, dynamicFlagConfig$lambda_1());
      var tmp_16 = ensureNotNull(dynamicSegmentTargetingConfig(js.allUsersTargetingConfig));
      var tmp_17 = js.customSegmentTargetingConfigs;
      tmp = new FlagConfig(tmp_1, tmp_3, tmp_5, tmp_7, tmp_9, tmp_11, tmp_13, tmp_15, tmp_16, dynamicListOf(tmp_17, dynamicFlagConfig$lambda_2()), dynamicEvaluationMode(js.evalMode));
    } else {
      tmp = null;
    }
    return tmp;
  }
  function dynamicSegmentTargetingConfig(js) {
    var tmp;
    if (js) {
      var tmp_0 = js.name;
      var tmp_1 = (!(tmp_0 == null) ? typeof tmp_0 === 'string' : false) ? tmp_0 : THROW_CCE();
      var tmp_2 = js.conditions;
      var tmp_3 = ensureNotNull(dynamicListOf(tmp_2, dynamicSegmentTargetingConfig$lambda()));
      var tmp_4 = js.allocations;
      var tmp_5 = ensureNotNull(dynamicListOf(tmp_4, dynamicSegmentTargetingConfig$lambda_0()));
      var tmp_6 = js.bucketingKey;
      tmp = new SegmentTargetingConfig(tmp_1, tmp_3, tmp_5, (tmp_6 == null ? true : typeof tmp_6 === 'string') ? tmp_6 : null);
    } else {
      tmp = null;
    }
    return tmp;
  }
  function dynamicOperator(js) {
    var tmp0_subject = (!(js == null) ? typeof js === 'string' : false) ? js : THROW_CCE();
    var tmp;
    switch (tmp0_subject) {
      case 'IS':
        tmp = Operator_IS_getInstance();
        break;
      case 'IS_NOT':
        tmp = Operator_IS_NOT_getInstance();
        break;
      case 'CONTAINS':
        tmp = Operator_CONTAINS_getInstance();
        break;
      case 'DOES_NOT_CONTAIN':
        tmp = Operator_DOES_NOT_CONTAIN_getInstance();
        break;
      case 'LESS_THAN':
        tmp = Operator_LESS_THAN_getInstance();
        break;
      case 'LESS_THAN_EQUALS':
        tmp = Operator_LESS_THAN_EQUALS_getInstance();
        break;
      case 'GREATER_THAN':
        tmp = Operator_GREATER_THAN_getInstance();
        break;
      case 'GREATER_THAN_EQUALS':
        tmp = Operator_GREATER_THAN_EQUALS_getInstance();
        break;
      case 'SET_IS':
        tmp = Operator_SET_IS_getInstance();
        break;
      case 'SET_IS_NOT':
        tmp = Operator_SET_IS_NOT_getInstance();
        break;
      case 'CSS_MATCH':
        tmp = Operator_CSS_MATCH_getInstance();
        break;
      case 'GLOB_MATCH':
        tmp = Operator_GLOB_MATCH_getInstance();
        break;
      case 'SET_CONTAINS':
        tmp = Operator_SET_CONTAINS_getInstance();
        break;
      case 'SET_DOES_NOT_CONTAIN':
        tmp = Operator_SET_DOES_NOT_CONTAIN_getInstance();
        break;
      case 'GLOB_DOES_NOT_MATCH':
        tmp = Operator_GLOB_DOES_NOT_MATCH_getInstance();
        break;
      case 'VERSION_LESS_THAN':
        tmp = Operator_VERSION_LESS_THAN_getInstance();
        break;
      case 'VERSION_LESS_THAN_EQUALS':
        tmp = Operator_VERSION_LESS_THAN_EQUALS_getInstance();
        break;
      case 'VERSION_GREATER_THAN':
        tmp = Operator_VERSION_GREATER_THAN_getInstance();
        break;
      case 'VERSION_GREATER_THAN_EQUALS':
        tmp = Operator_VERSION_GREATER_THAN_EQUALS_getInstance();
        break;
      case 'HAS_PREFIX':
        tmp = Operator_HAS_PREFIX_getInstance();
        break;
      default:
        throw IllegalArgumentException_init_$Create$('Invalid operator ' + js);
    }
    return tmp;
  }
  function dynamicUserPropertyFilter(js) {
    var tmp;
    if (js) {
      var tmp_0 = js.prop;
      var tmp_1 = (!(tmp_0 == null) ? typeof tmp_0 === 'string' : false) ? tmp_0 : THROW_CCE();
      var tmp_2 = dynamicOperator(js.op);
      var tmp_3 = js.values;
      tmp = new UserPropertyFilter(tmp_1, tmp_2, toSet(ensureNotNull(dynamicListOf$default(tmp_3, null, 2, null))));
    } else {
      tmp = null;
    }
    return tmp;
  }
  function dynamicVariant(js) {
    var tmp;
    if (js) {
      var tmp_0 = js.key;
      tmp = new Variant((tmp_0 == null ? true : typeof tmp_0 === 'string') ? tmp_0 : null, js.payload);
    } else {
      tmp = null;
    }
    return tmp;
  }
  function dynamicSkylabUser(js) {
    var tmp;
    if (js) {
      Keys_getInstance();
      var tmp_0 = js['user_id'];
      var tmp_1 = (!(tmp_0 == null) ? typeof tmp_0 === 'string' : false) ? tmp_0 : null;
      Keys_getInstance();
      var tmp_2 = js['device_id'];
      var tmp_3 = (!(tmp_2 == null) ? typeof tmp_2 === 'string' : false) ? tmp_2 : null;
      Keys_getInstance();
      var tmp_4 = js['country'];
      var tmp_5 = (!(tmp_4 == null) ? typeof tmp_4 === 'string' : false) ? tmp_4 : null;
      Keys_getInstance();
      var tmp_6 = js['region'];
      var tmp_7 = (!(tmp_6 == null) ? typeof tmp_6 === 'string' : false) ? tmp_6 : null;
      Keys_getInstance();
      var tmp_8 = js['dma'];
      var tmp_9 = (!(tmp_8 == null) ? typeof tmp_8 === 'string' : false) ? tmp_8 : null;
      Keys_getInstance();
      var tmp_10 = js['city'];
      var tmp_11 = (!(tmp_10 == null) ? typeof tmp_10 === 'string' : false) ? tmp_10 : null;
      Keys_getInstance();
      var tmp_12 = js['language'];
      var tmp_13 = (!(tmp_12 == null) ? typeof tmp_12 === 'string' : false) ? tmp_12 : null;
      Keys_getInstance();
      var tmp_14 = js['platform'];
      var tmp_15 = (!(tmp_14 == null) ? typeof tmp_14 === 'string' : false) ? tmp_14 : null;
      Keys_getInstance();
      var tmp_16 = js['version'];
      var tmp_17 = (!(tmp_16 == null) ? typeof tmp_16 === 'string' : false) ? tmp_16 : null;
      Keys_getInstance();
      var tmp_18 = js['os'];
      var tmp_19 = (!(tmp_18 == null) ? typeof tmp_18 === 'string' : false) ? tmp_18 : null;
      Keys_getInstance();
      var tmp_20 = js['device_family'];
      var tmp_21 = (!(tmp_20 == null) ? typeof tmp_20 === 'string' : false) ? tmp_20 : null;
      Keys_getInstance();
      var tmp_22 = js['device_type'];
      var tmp_23 = (!(tmp_22 == null) ? typeof tmp_22 === 'string' : false) ? tmp_22 : null;
      Keys_getInstance();
      var tmp_24 = js['carrier'];
      var tmp_25 = (!(tmp_24 == null) ? typeof tmp_24 === 'string' : false) ? tmp_24 : null;
      Keys_getInstance();
      var tmp_26 = js['user_properties'];
      tmp = SkylabUser_init_$Create$(tmp_1, tmp_3, null, tmp_5, tmp_7, tmp_9, tmp_11, tmp_13, tmp_15, tmp_17, null, tmp_19, null, null, null, tmp_21, tmp_23, tmp_25, null, null, dynamicMapOf$default(tmp_26, null, 2, null), 816132, null);
    } else {
      tmp = null;
    }
    return tmp;
  }
  function dynamicFlagConfig$lambda() {
    return function (it) {
      return ensureNotNull(dynamicVariant(it));
    };
  }
  function dynamicFlagConfig$lambda_0() {
    return function (it) {
      return toSet(ensureNotNull(dynamicListOf$default(it, null, 2, null)));
    };
  }
  function dynamicFlagConfig$lambda_1() {
    return function (it) {
      return toSet(ensureNotNull(dynamicListOf$default(it, null, 2, null)));
    };
  }
  function dynamicFlagConfig$lambda_2() {
    return function (it) {
      return ensureNotNull(dynamicSegmentTargetingConfig(it));
    };
  }
  function dynamicSegmentTargetingConfig$lambda() {
    return function (it) {
      return ensureNotNull(dynamicUserPropertyFilter(it));
    };
  }
  function dynamicSegmentTargetingConfig$lambda_0() {
    return function (it) {
      return ensureNotNull(dynamicAllocation(it));
    };
  }
  function entriesOf(js, transform) {
    var tmp;
    if (js) {
      var tmp$ret$2;
      {
        var tmp_0 = Object.entries;
        var tmp0_map = ((!(tmp_0 == null) ? typeof tmp_0 === 'function' : false) ? tmp_0 : THROW_CCE())(js);
        var tmp$ret$1;
        {
          var tmp0_mapTo = ArrayList_init_$Create$(tmp0_map.length);
          var indexedObject = tmp0_map;
          var inductionVariable = 0;
          var last = indexedObject.length;
          while (inductionVariable < last) {
            var item = indexedObject[inductionVariable];
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$0;
            {
              var tmp_1 = item[0];
              tmp$ret$0 = to((!(tmp_1 == null) ? typeof tmp_1 === 'string' : false) ? tmp_1 : THROW_CCE(), transform(item[1]));
            }
            tmp0_mapTo.a(tmp$ret$0);
          }
          tmp$ret$1 = tmp0_mapTo;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      tmp = tmp$ret$2;
    } else {
      tmp = null;
    }
    return tmp;
  }
  function dynamicMapOf(js, transform) {
    var tmp0_safe_receiver = entriesOf(js, transform);
    return tmp0_safe_receiver == null ? null : toMap(tmp0_safe_receiver);
  }
  function dynamicMapOf$default(js, transform, $mask0, $handler) {
    if (!(($mask0 & 2) === 0)) {
      transform = dynamicMapOf$lambda();
    }
    return dynamicMapOf(js, transform);
  }
  function dynamicListOf(js, transform) {
    var tmp0_safe_receiver = (!(js == null) ? isArray(js) : false) ? js : null;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$2;
      {
        var tmp$ret$1;
        {
          var tmp0_mapTo = ArrayList_init_$Create$(tmp0_safe_receiver.length);
          var tmp0_iterator = arrayIterator(tmp0_safe_receiver);
          while (tmp0_iterator.g()) {
            var item = tmp0_iterator.e();
            var tmp$ret$0;
            {
              tmp$ret$0 = transform(item);
            }
            tmp0_mapTo.a(tmp$ret$0);
          }
          tmp$ret$1 = tmp0_mapTo;
        }
        tmp$ret$2 = tmp$ret$1;
      }
      tmp = tmp$ret$2;
    }
    return tmp;
  }
  function dynamicListOf$default(js, transform, $mask0, $handler) {
    if (!(($mask0 & 2) === 0)) {
      transform = dynamicListOf$lambda();
    }
    return dynamicListOf(js, transform);
  }
  function dynamicMapOf$lambda() {
    return function (it) {
      return (it == null ? true : isObject(it)) ? it : THROW_CCE();
    };
  }
  function dynamicListOf$lambda() {
    return function (it) {
      return (it == null ? true : isObject(it)) ? it : THROW_CCE();
    };
  }
  //region block: exports
  function $jsExportAll$(_) {
    _.evaluate = evaluate;
  }
  $jsExportAll$(_);
  //endregion
  return _;
}));

//# sourceMappingURL=experiment-evaluation-evaluation-js.js.map