"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VulnerabilityCountHoverProvider = void 0;
const general_1 = require("../../common/constants/general");
const languageConsts_1 = require("../../common/constants/languageConsts");
const issueUtils_1 = require("../../snykCode/utils/issueUtils");
class VulnerabilityCountHoverProvider {
    constructor(vscodeLanguages, analytics) {
        this.vscodeLanguages = vscodeLanguages;
        this.analytics = analytics;
    }
    register(diagnostics) {
        const documentFilter = languageConsts_1.SupportedLanguageIds.map(id => ({ scheme: 'file', language: id }));
        this.hoverProvider = this.vscodeLanguages.registerHoverProvider(documentFilter, {
            provideHover: this.getHover(diagnostics),
        });
        return this;
    }
    getHover(diagnostics) {
        return (document, position) => {
            if (!diagnostics || !diagnostics.has(document.uri)) {
                return undefined;
            }
            const currentFileReviewIssues = diagnostics.get(document.uri);
            const issue = issueUtils_1.IssueUtils.findIssueWithRange(position, currentFileReviewIssues);
            if (issue) {
                this.logIssueHoverIsDisplayed();
            }
        };
    }
    logIssueHoverIsDisplayed() {
        this.analytics.logIssueHoverIsDisplayed({
            issueType: 'Open Source Vulnerability',
            ide: general_1.IDE_NAME,
        });
    }
    dispose() {
        if (this.hoverProvider) {
            this.hoverProvider.dispose();
        }
    }
}
exports.VulnerabilityCountHoverProvider = VulnerabilityCountHoverProvider;
//# sourceMappingURL=vulnerabilityCountHoverProvider.js.map