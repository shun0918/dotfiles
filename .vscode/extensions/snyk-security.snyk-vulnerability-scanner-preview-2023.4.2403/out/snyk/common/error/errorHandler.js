"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorHandler = void 0;
const views_1 = require("../constants/views");
const errorReporter_1 = require("./errorReporter");
/**
 * General error handler.
 */
class ErrorHandler {
    /**
     * Should be used only if the affected error breaks the whole extension.
     */
    static async handleGlobal(error, logger, contextService, loadingBadge) {
        await contextService.setContext(views_1.SNYK_CONTEXT.ERROR, views_1.SNYK_ERROR_CODES.BLOCKING);
        loadingBadge.setLoadingBadge(true);
        ErrorHandler.handle(error, logger);
    }
    /**
     * Should be used to log locally and report error event remotely.
     */
    static handle(error, logger, message, tags) {
        const errorStr = ErrorHandler.stringifyError(error);
        logger.error(message ? `${message}. ${errorStr}` : errorStr);
        errorReporter_1.ErrorReporter.capture(error, tags);
    }
    static stringifyError(error) {
        return JSON.stringify(error, Object.getOwnPropertyNames(error));
    }
}
exports.ErrorHandler = ErrorHandler;
//# sourceMappingURL=errorHandler.js.map