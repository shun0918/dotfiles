"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.vsCodeLanguages = exports.VSCodeLanguages = void 0;
const vscode = __importStar(require("vscode"));
class VSCodeLanguages {
    registerHoverProvider(selector, provider) {
        return vscode.languages.registerHoverProvider(selector, provider);
    }
    createDiagnosticCollection(name) {
        return vscode.languages.createDiagnosticCollection(name);
    }
    createDiagnostic(range, message, severity) {
        return new vscode.Diagnostic(range, message, severity);
    }
    createDiagnosticRelatedInformation(uri, rangeOrPosition, message) {
        return new vscode.DiagnosticRelatedInformation(new vscode.Location(uri, rangeOrPosition), message);
    }
    createRange(startLine, startCharacter, endLine, endCharacter) {
        return new vscode.Range(startLine, startCharacter, endLine, endCharacter);
    }
    registerCodeActionsProvider(selector, provider, metadata) {
        return vscode.languages.registerCodeActionsProvider(selector, provider, metadata);
    }
}
exports.VSCodeLanguages = VSCodeLanguages;
exports.vsCodeLanguages = new VSCodeLanguages();
//# sourceMappingURL=languages.js.map